import{a as g,S as L,i as n}from"./assets/vendor-CrlV4O_2.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const d of i.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();const b="https://pixabay.com/api/",w="50231364-89a6adaa041ec148f09dc01d0";async function h(e="",r=1,s=15){const o={key:w,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,page:r,per_page:s};return(await g.get(b,{params:o})).data}let v=new L(".gallery a");function m(e){const r=document.querySelector(".gallery"),s=e.map(o=>`
    <li class="gallery-item">
      <a href="${o.largeImageURL}">
        <img class="gallery-image" src="${o.webformatURL}" alt="${o.tags}" width="360" height="200"/>
      </a>
      <div class="info">
        <p><b>Likes</b> ${o.likes}</p>
        <p><b>Views</b> ${o.views}</p>
        <p><b>Comments</b> ${o.comments}</p>
        <p><b>Downloads</b> ${o.downloads}</p>
      </div>
    </li>
  `).join("");r.insertAdjacentHTML("beforeend",s),v.refresh()}function S(){const e=document.querySelector(".gallery");e.innerHTML=""}function p(){document.querySelector(".loader").classList.remove("is-hidden")}function y(){document.querySelector(".loader").classList.add("is-hidden")}const q=document.querySelector(".form"),a=document.querySelector(".load-more"),u=document.querySelector(".load-more-loader");a.classList.add("is-hidden");u.classList.add("is-hidden");let l=1,f="";const c=15;q.addEventListener("submit",async e=>{e.preventDefault();const r=e.target.elements["search-text"].value.trim();if(a.classList.add("is-hidden"),!r){n.error({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}f=r,l=1,p(),S();try{const s=await h(f,l,c);if(s.hits.length===0){n.info({title:"Info",message:"No images found for your query.",position:"topRight"}),a.classList.add("is-hidden");return}m(s.hits),s.totalHits>l*c?a.classList.remove("is-hidden"):(a.classList.add("is-hidden"),n.info({title:"Info",message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch(s){n.error({title:"Error",message:"Something went wrong.",position:"topRight"}),console.error(s)}finally{y()}});a.addEventListener("click",async()=>{l+=1,p(),u.classList.remove("is-hidden");try{const e=await h(f,l,c);m(e.hits);const{height:r}=document.querySelector(".gallery").firstElementChild.getBoundingClientRect();window.scrollBy({top:r*2,behavior:"smooth"}),e.totalHits<=l*c&&(a.classList.add("is-hidden"),n.info({title:"Info",message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch(e){n.error({title:"Error",message:"Failed to load more images.",position:"topRight"}),console.error(e)}finally{y(),u.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
